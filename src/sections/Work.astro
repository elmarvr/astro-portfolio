---
import Project, { Props} from "@/ui/Project.astro";
import Section from "@/ui/Section.astro";
import SectionTitle from "@/ui/SectionTitle.astro";

const projects = await Astro.glob<Props>("../content/projects/*.md");
---

<Section id="work" class="overflow-hidden">
  <SectionTitle class="title">Wat ik gemaakt heb</SectionTitle>
  <div class="flex flex-col gap-y-32">
    {projects.map((project, index) => (
      <Project  {...project.frontmatter} index={index}>
        <project.Content />
      </Project>
    ))}
  </div>
</Section>

<script>
import anime from "animejs";
import { animateInView } from "@/utils/animation";

import { inView } from "@/utils/inView";


animateInView("#work .title", {
  translateY: [100, 0],
  opacity: [0, 1],
})


anime.set("[data-project] .column", {
  opacity: 0
})

inView("[data-project]", ({ target }) => {
  if (target instanceof HTMLElement) {
    const index = parseInt(target.dataset.project ?? "-1")
    const reverse = index % 2 === 1;

    

    anime({
      targets: `[data-project="${index}"] .column`,
      opacity: [0, 1],
      translateX: [anime.stagger(reverse ? [100, -100] : [-100, 100]), 0],
      delay: anime.stagger(150),
      duration: 1000
    });
  }
}, 
{
  amount: 0.5
});
</script>