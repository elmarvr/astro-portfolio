---
import { compareAsc } from "date-fns";
import { groupBy } from "@/utils/groupBy";
import Section from "@/ui/Section.astro";
import { getPageContent } from "@/i18n/i18n";
import SectionTitle from "@/ui/SectionTitle.astro";
import Prose from "@/ui/Prose.astro";

interface EventFrontmatter {
  title: string;
  date: string;
}

const instances = getPageContent(await Astro.glob<EventFrontmatter>("../content/journey/*.md"));

const events = instances.map((instance) => ({
  ...instance.frontmatter,
  date: new Date(instance.frontmatter.date),
  Content: instance.Content,
}))

events.sort((a, b) => compareAsc(a.date, b.date));

const eventsByYear = Object.entries(groupBy(events, (item) => item.date.getFullYear()));

eventsByYear.sort((a, b) => compareAsc(new Date(a[0]), new Date(b[0])));
---

<Section id="journey" class="flex justify-center">
  <div>
    <SectionTitle>Mijn geschiedenis</SectionTitle>
    <ul class="flex flex-col">
      {
        eventsByYear.map(([year, events]) => (
          <li class="event flex gap-8 [&:last-child_>_ul]:pb-0">
            <div class="flex flex-col items-end">
              <h2 class="flex items-center w-16 justify-between after:relative after:-right-1 after:content after:block after:w-3 after:h-3 after:bg-fuchsia-500 after:rounded-full">{year}</h2>
              <div class="flex-1 w-1 rounded bg-slate-800 my-2.5"></div>
            </div>
            
            <ul class="pb-20 flex flex-col gap-8">
              {events.map((event) => (
                <li>
                  <h3 class="text-slate-300 font-medium text-md pb-1">{event.title}</h3>
                  <Prose>
                    <event.Content />
                  </Prose>
                </li>
              ))}
            </ul>
          </li>
        )) 
      }
    </ul>
  </div>
</Section>


<script>
import {  setTransparent, slideRight, slideUp } from "@/utils/animation";
import { inView } from "@/utils/inView";

const titleSelector = "#journey .section-title";
const eventSelector = "#journey .event";

setTransparent([titleSelector, eventSelector]);

inView(titleSelector, ({ target }) => {
  slideRight(target);
});

inView(eventSelector, ({ target }) => {
  slideUp(target);
}, { amount: 0.8 });
</script>